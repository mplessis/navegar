<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Navegar.UWP.Win10</name>
    </assembly>
    <members>
        <member name="T:Navegar.UWP.Win10.FrameNavigationException">
            <summary>
            Exception  permettant de capturer les erreurs dues aux Frame, lors de la navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.FrameNavigationException.#ctor">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="e">
            L'exception déclenchée lors de la navigation
            </param>
        </member>
        <member name="T:Navegar.UWP.Win10.FunctionToLoadNavigationException">
            <summary>
            Exception  permettant de capturer les erreurs de chargement de fonction, se passant durant la navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.FunctionToLoadNavigationException.#ctor(System.String,System.String)">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="functionToLoadName">Nom de la fonction qui doit etre lancée </param>
            <param name="typeName">Nom du Type d'objet contenant la fonction</param>
        </member>
        <member name="T:Navegar.UWP.Win10.HistoryNavigationException">
            <summary>
            Exception  permettant de capturer les erreurs d'historique, lors de la navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.HistoryNavigationException.#ctor">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="e">
            L'exception déclenchée lors de la navigation
            </param>
        </member>
        <member name="T:Navegar.UWP.Win10.INavigation">
            <summary>
            Interface de la classe de navigation
            </summary>
        </member>
        <member name="P:Navegar.UWP.Win10.INavigation.PreviewNavigate">
            <summary>
            Permet d'exécuter une action avant la navigation
            </summary>
        </member>
        <member name="E:Navegar.UWP.Win10.INavigation.NavigationCanceledOnPreviewNavigate">
            <summary>
            Permet d'indiquer que la navigation est annulée
            </summary>
        </member>
        <member name="P:Navegar.UWP.Win10.INavigation.BackButtonPressed">
            <summary>
            Evenement de navigation arriére avec le bouton physique
            Permet de définir soit même une fonction gérant ce retour sans utiliser celui par défaut de Navegar
            </summary>
        </member>
        <member name="P:Navegar.UWP.Win10.INavigation.BackVirtualButtonPressed">
            <summary>
            Evenement de navigation arriére avec le bouton virtuel
            Permet de définir soit même une fonction gérant ce retour sans utiliser celui par défaut de Navegar
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.CanGoBack">
            <summary>
            Déterminer si un historique est possible depuis le ViewModel en cours
            </summary>
            <returns>
            <c>true</c> si la navigation est possible, sinon <c>false</c>
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.CancelNavigation">
            <summary>
            Déclenche l'événement d'annulation de navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.Clear">
            <summary>
            Permet de vider l'historique de navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.GetTypeViewModelToBack">
            <summary>
            Permet de connaitre le type du ViewModel au niveau n-1 de l'historique de navigation
            </summary>
            <returns>Type du ViewModel</returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.GetViewModelCurrent">
            <summary>
            Permet de retrouver l'instance du ViewModel courant
            </summary>
            <returns>ViewModel courant</returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.GetViewModelInstance``1">
            <summary>
            Récupére l'instance du ViewModel
            </summary>
            <typeparam name="T">
            Type du ViewModel
            </typeparam>
            <returns>
            Instance du ViewModel
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.GoBack">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.GoBack(System.String,System.Object[])">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
        </member>
        <member name="P:Navegar.UWP.Win10.INavigation.HasBackButton">
            <summary>
            Indique si le device a un bouton de retour physique
            </summary>
            <returns>True si un bouton est présent, sinon false</returns>
        </member>
        <member name="P:Navegar.UWP.Win10.INavigation.HasVirtualBackButtonShow">
            <summary>
            Indique si le device a un bouton de retour virtuel affiché
            </summary>
            <returns>True si un bouton est présent, sinon false</returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.InitializeRootFrame(Windows.UI.Xaml.Controls.Frame)">
            <summary>
            Permet de référencer la Frame Principale généré au lancement de l'application, pour la suite de la navigation
            </summary>
            <param name="rootFrame">Frame de navigation principale</param>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.NavigateTo``1(System.Object[])">
            <summary>
            Naviguer vers un ViewModel sans historiser le ViewModel actuel
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.NavigateTo``1(System.Boolean,System.Object[])">
            <summary>
            Naviguer vers un ViewModel sans historiser le ViewModel actuel en demandant une nouvelle instance du ViewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.NavigateTo``1(System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel sans historiser le ViewModel actuel
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.Boolean)">
            <summary>
            Navigeur vers un ViewModel, avec un ViewModel en historique précédent
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Navigeur vers un ViewModel, avec un ViewModel en historique précédent. 
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.RegisterView``2">
            <summary>
            Permet d'associer un type pour la vue à un type pour le modéle de vue
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.INavigation.ShowVirtualBackButton(System.Boolean,System.Boolean)">
            <summary>
            Perrmet d'afficher le bouton virtuel dans la barre de titre de l'application
            </summary>
            <param name="visible">indique si l'on doit rendre le bouton visible ou non</param>
            <param name="force">permet de forcer l'affichage même si le device posséde un bouton physique</param>
            <remarks>
            Si le device utilisé posséde un bouton physique cette fonction n'affiche pas de bouton, sauf à forcer l'affichage avec le paramétre
            </remarks>
        </member>
        <member name="T:Navegar.UWP.Win10.PreNavigateDelegate`1">
            <summary>
            Permet d'exécuter une action avant la navigation
            </summary>
        </member>
        <member name="T:Navegar.UWP.Win10.EventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Navegar.UWP.Win10.Navigation">
             <summary>
             Implémentation de la classe de navigation
             </summary>
             <example>
               On réalise la navigation suivante :
             
               MainViewModel -&gt; FirstViewModel &lt;-&gt; SecondViewModel
              
               <code>
             Dans le ViewModelLocator.cs :
             
             public ViewModelLocator()
             {
                ServiceLocator.SetLocatorProvider(() => SimpleIoc.Default);
            
                //Enregistrer la classe de navigation dans l'IOC et les ViewModels
                SimpleIoc.Default.Register&lt;INavigation, Navigation&gt;();
                SimpleIoc.Default.Register&lt;MainViewModel&gt;();
            
                //Association des vues avec leur modéle de vue
                SimpleIoc.Default.GetInstance&lt;INavigation&gt;().RegisterView&lt;BlankPage1ViewModel, BlankPage1&gt;();
                SimpleIoc.Default.GetInstance&lt;INavigation&gt;().RegisterView&lt;BlankPage2ViewModel, BlankPage2&gt;();
              }
            
              public MainViewModel Main
              {
                 get { return SimpleIoc.Default.GetInstance&lt;MainViewModel&gt;(); }
              }
            
              public BlankPage1ViewModel BlankPage1ViewModel
              {
                 get { return SimpleIoc.Default.GetInstance&lt;INavigation&gt;().GetViewModelInstance&lt;BlankPage1ViewModel&gt;(); }
              }
            
              public BlankPage2ViewModel BlankPage2ViewModel
              {
                 get { return SimpleIoc.Default.GetInstance&lt;INavigation&gt;().GetViewModelInstance&lt;BlankPage2ViewModel&gt;(); }
              }
             
             
             Dans MainViewModel.cs :
             
                //Pour aller vers un autre ViewModel
                SimpleIoc.Default.GetInstance&lt;INavigation&gt;().NavigateTo&lt;FirstViewModel&gt;();
             
             
             
             Dans BlankPage1ViewModel.cs :
             
                //Pour aller vers SecondViewModel.cs, en supposant que le constructeur prenne un argument et que l'on veuille revenir vers FirstViewModel
                SimpleIoc.Default.GetInstance&lt;INavigation&gt;().NavigateTo&lt;BlankPage2ViewModel&gt;(this, new object[] { Data }, true);
             
             
             
             Dans BlankPage2ViewModel.cs :
             
                //Pour revenir vers BlankPage1ViewModel :
                if(SimpleIoc.Default.GetInstance&lt;INavigation&gt;().CanGoBack())
                {
                   SimpleIoc.Default.GetInstance&lt;INavigation&gt;().GoBack();
                }
               </code>
             </example>
        </member>
        <member name="E:Navegar.UWP.Win10.Navigation.NavigationCanceledOnPreviewNavigate">
            <summary>
            Permet d'indiquer que la navigation est annulée
            </summary>
        </member>
        <member name="P:Navegar.UWP.Win10.Navigation.PreviewNavigate">
            <summary>
            Permet d'exécuter une action avant la navigation
            </summary>
        </member>
        <member name="P:Navegar.UWP.Win10.Navigation.BackButtonPressed">
            <summary>
            Evenement de navigation arriére avec le bouton physique ou virtuel
            Permet de définir soit même une fonction gérant ce retour sans utiliser celui par défaut de Navegar
            </summary>
            <remarks>
            Si aucun bouton physique ou virtuel n'est présent sur le device, la valeur est égale à null
            </remarks>
        </member>
        <member name="P:Navegar.UWP.Win10.Navigation.BackVirtualButtonPressed">
            <summary>
            Evenement de navigation arriére avec le bouton virtuel
            Permet de définir soit même une fonction gérant ce retour sans utiliser celui par défaut de Navegar
            </summary>
            <remarks>
            Supporté uniquement sur la version desktop de Windows 10
            </remarks>
        </member>
        <member name="P:Navegar.UWP.Win10.Navigation.HasBackButton">
            <summary>
            Indique si le device a un bouton de retour physique ou virtuel
            </summary>
            <returns>True si un bouton est présent, sinon false</returns>
        </member>
        <member name="P:Navegar.UWP.Win10.Navigation.HasVirtualBackButtonShow">
            <summary>
            Indique si le device a un bouton de retour virtuel affiché
            </summary>
            <returns>True si un bouton est présent, sinon false</returns>
            <remarks>
            Supporté uniquement sur la version desktop de Windows 10
            </remarks>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.InitializeRootFrame(Windows.UI.Xaml.Controls.Frame)">
            <summary>
            Permet de référencer la Frame Principale généré au lancement de l'application, pour la suite de la navigation
            </summary>
            <param name="rootFrame">Frame de navigation principale</param>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.NavigateTo``1(System.Object[])">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.NavigateTo``1(System.Boolean,System.Object[])">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.NavigateTo``1(System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>     
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>  
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel, avec un ViewModel en historique précédent
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.NavigateTo``1(GalaSoft.MvvmLight.ViewModelBase,System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Navigeur vers un ViewModel, avec un ViewModel en historique précédent. 
            Le paramètre <param name="functionToLoad"></param> permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="currentInstance">
            Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.CanGoBack">
            <summary>
            Déterminer si un historique est possible depuis le ViewModel en cours
            </summary>
            <returns>
            <c>true</c> si la navigation est possible, sinon <c>false</c>
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.GoBack">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.GoBack(System.String,System.Object[])">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours, si une navigation arriére est possible
            </summary>
            /// <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.GetTypeViewModelToBack">
            <summary>
            Permet de connaitre le type du ViewModel au niveau n-1 de l'historique de navigation
            </summary>
            <returns>Type du ViewModel</returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.GetViewModelInstance``1">
            <summary>
            Récupére l'instance du ViewModel
            </summary>
            <typeparam name="T">
            Type du ViewModel
            </typeparam>
            <returns>
            Instance du ViewModel
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.RegisterView``2">
            <summary>
            Permet d'associer un type pour la vue à un type pour le modéle de vue
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.GetViewModelCurrent">
            <summary>
            Permet de retrouver l'instance du ViewModel courant
            </summary>
            <returns>ViewModel courant</returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.CancelNavigation">
            <summary>
            Déclenche l'événement d'annulation de navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.Clear">
            <summary>
            Permet de vider l'historique de navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.ShowVirtualBackButton(System.Boolean,System.Boolean)">
            <summary>
            Perrmet d'afficher le bouton virtuel dans la barre de titre de l'application
            </summary>
            <param name="visible">indique si l'on doit rendre le bouton visible ou non</param>
            <param name="force">permet de forcer l'affichage même si le device posséde un bouton physique</param>
            <remarks>
            Si le device utilisé posséde un bouton physique cette fonction n'affiche pas de bouton, sauf à forcer l'affichage avec le paramétre
            Supporté uniquement sur la version desktop de Windows 10
            </remarks>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.Navigate(System.Type,System.String,System.Object[])">
            <summary>
            Naviguer vers l'historique (ViewModel précédent) depuis le ViewModel en cours
            </summary>
            <param name="viewModelToName">
            Type du Viewmodel vers lequel la navigation est effectuée
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.Navigate``1(System.Type,System.Type,System.Object[],System.String,System.Object[],System.Boolean)">
            <summary>
            Naviguer vers un ViewModel 
            </summary>
            <typeparam name="TTo">
            Type du Viewmodel vers lequel la navigation est effectuée
            </typeparam>
            <param name="viewModelToName">
            Type du Viewmodel vers lequel la navigation est effectuée
            </param>
            <param name="viewModelFromName">
            Type du Viewmodel depuis lequel la navigation est effectuée
            </param>
            <param name="parametersViewModel">
            Tableau des paramétres éventuels à transmettre au constructeur du ViewModel
            </param>
            <param name="functionToLoad">
            Permet de spécifier un nom de fonction à appeler aprés le chargement du viewModel ciblé
            </param>
            <param name="parametersFunction">
            Paramétres pour la fonction appelée
            </param>
            <param name="newInstance">
            Indique si l'on génére une nouvelle instance obligatoirement
            </param>
            <returns>
            Retourne la clé unique pour SimpleIoc, de l'instance du viewmodel vers lequel la navigation a eu lieu
            </returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.SetCurrentView(System.Type)">
            <summary>
            Affecte la propriété de view courante du ViewModel principal
            </summary>
            <param name="instanceToNavigate">
            Instance de la vue qui est devenue la vue courante
            </param>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.SetNavigationHistory(System.Type)">
            <summary>
            Permet de gérer l'état de navigation à l'instant T pour un ViewModel
            </summary>
            <param name="viewModelFromName">ViewModel pris en compte</param>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.SetGoBack(System.Type)">
            <summary>
            Permet de revenir en arriére dans la pile de navigation des pages
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.CanGoBackFrame">
            <summary>
            Permet de savoir si l'on peut revenir en arriere au niveau des Frame
            </summary>
            <returns>Résultat de la demande</returns>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.ClearNavigation">
            <summary>
            Vide l'historique de navigation de la classe et de la Frame de WinRT
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.HardwareButtonsBackPressed(System.Object,Windows.Phone.UI.Input.BackPressedEventArgs)">
            <summary>
            Fonction par défaut du retour en arriére par le bouton phyique du device
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Navegar.UWP.Win10.Navigation.VirtualBackPressed(System.Object,Windows.UI.Core.BackRequestedEventArgs)">
            <summary>
            Fonction par défaut du retour en arriére par le bouton virtuel du device
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Navegar.UWP.Win10.NavigationException">
            <summary>
            Exception permettant de capturer les erreurs se passant durant la navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.NavigationException.#ctor(System.Exception)">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="e">
            L'exception déclenchée lors de la navigation
            </param>
        </member>
        <member name="M:Navegar.UWP.Win10.TypeExtensions.FilterMethodByParams(System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Permet de filtrer sur les parametres d'une fonction pour les fonctions surchargées
            </summary>
            <param name="methods"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Navegar.UWP.Win10.ViewModelHistoryTypeException">
            <summary>
            Exception  permettant de capturer les erreurs de chargement de fonction, lors de la navigation
            </summary>
        </member>
        <member name="M:Navegar.UWP.Win10.ViewModelHistoryTypeException.#ctor(System.String)">
            <summary>
            Constructeur de l'exception
            </summary>
            <param name="type">Type de l'objet passé en paramètre pour l'historique</param>
        </member>
    </members>
</doc>
